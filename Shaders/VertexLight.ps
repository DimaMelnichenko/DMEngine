////////////////////////////////////////////////////////////////////////////////
// Filename: light.ps
////////////////////////////////////////////////////////////////////////////////

#include "common.vs"
#include "samplers.sh"
//#include "CommonLight.ps"

/////////////
// GLOBALS //
/////////////
Texture2D g_texAlbedo : register(t0);

//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
	float4 color : COLOR0; 
};

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 main(PixelInputType input) : SV_TARGET
{	
	float4 finalLight = (float4)0;
	
    // Sample the pixel color from the texture using the sampler at this texture coordinate location.
    float4 albedo = g_texAlbedo.Sample( g_SamplerLinearClamp, input.tex ) * float4( 0.70, 1.0, 0.1, 1.0 );	
	
	finalLight = float4( albedo * saturate( (input.color + 0.7) * 1.0 ) ) + float4( 0.1, 0.1, 0.11, 0.0 );
	
	return finalLight;
}